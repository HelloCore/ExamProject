<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util-2.0.xsd
		">
		<bean id="propertyPlaceholderConfigurer" 
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="locations">
				<list>
					<value>classpath:/database.properties</value>
					<value>classpath:/hibernate.properties</value>
					<value>classpath:/email.properties</value>
				</list>
			</property>
		</bean>
		
		<context:annotation-config />
		<context:spring-configured />
		<context:load-time-weaver 
			weaver-class="org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver"
		 />
		<context:component-scan base-package="th.ac.kbu.cs.ExamProject.Common.Dao
				,th.ac.kbu.cs.ExamProject.Controller
				,th.ac.kbu.cs.ExamProject.Domain
				,th.ac.kbu.cs.ExamProject.CoreGrid
				,th.ac.kbu.cs.ExamProject.Entity
				,th.ac.kbu.cs.ExamProject.Service
				,th.ac.kbu.cs.ExamProject.Security
				,th.ac.kbu.cs.ExamProject.Listener
				,th.ac.kbu.cs.ExamProject.Util" />
				
		
		<bean id="exceptionResolver" class="th.ac.kbu.cs.ExamProject.Exception.CoreExceptionResolver" />
		<bean id="viewResolver"
		    class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		    <property name="prefix" value="/" />
			<property name="suffix" value=".page" />
		
		    <property name="viewClass">
		        <value>
		            org.springframework.web.servlet.view.tiles2.TilesView
		        </value>
		    </property>
		</bean>
		<bean id="tilesConfigurer"
		    class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		    <property name="definitions">
		        <list>
		            <value>/WEB-INF/tiles/base-tiles.xml</value>
		        </list>
		    </property>
		</bean>
		
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
			<property name="driverClassName" value="${database.driverClassname}" />
			<property name="url"  value="${database.url}" />
			<property name="username" value="${database.username}" />
			<property name="password" value="${database.password}" />
			<property name="testOnBorrow" value="true"></property>
    		<property name="validationQuery" value="SELECT 1 FROM DUAL"></property> 
		</bean>
		
		<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
			<property name="dataSource">
				<ref bean="dataSource" />
			</property>
			<property name="packagesToScan" value="th.ac.kbu.cs.ExamProject.Entity" />
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
					<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
					<prop key="hibernate.dialect">${hibernate.dialect}</prop>
					<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				</props>
			</property>
		</bean>
	
		<tx:annotation-driven  />
		<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
			<property name="sessionFactory" >
				<ref bean="sessionFactory" />
			</property>
		</bean>
		
		<bean id="stringHttpMessageConverter"
class="org.springframework.http.converter.StringHttpMessageConverter" />

		<bean id="jsonHttpMessageConverter"
		        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		    <property name="supportedMediaTypes" value="application/json"/>
		  </bean>
		  
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="alwaysUseFullPath" value="true" /> 
	</bean>
		<bean id="defaultRequestToViewNameTranslator" class="org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator"/>
		  <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		  	<property name="alwaysUseFullPath" value="true" />
		    <property name="messageConverters">
		      <util:list id="beanList">
		        <ref bean="jsonHttpMessageConverter"/>
		      </util:list>
		    </property>
		  </bean>
		  
		  <bean id="methodHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
		  	 <property name="messageConverters">
		      <util:list>
		        <ref bean="jsonHttpMessageConverter"/>
		        <ref bean="stringHttpMessageConverter" />
		      </util:list>
		   	</property>
		  </bean>
		  
		
	  	<aop:aspectj-autoproxy proxy-target-class="true">
			<aop:include name="loggerAspect"/>
		</aop:aspectj-autoproxy> 
		
		
		<bean id="loggerAspect" class="th.ac.kbu.cs.ExamProject.Util.LoggerAspect" />  
		
		<bean class="th.ac.kbu.cs.ExamProject.Listener.SecurityLoggerListener" />
		
		<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

		<bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>
		
		<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
			<property name="host" value="${email.host}" />
			<property name="username" value="${email.username}" />
			<property name="password" value="${email.password}" />
		 
			<property name="javaMailProperties">
			   <props>
		       	      <prop key="mail.smtp.auth">${email.smtp.auth}</prop>
		       	      <prop key="mail.smtp.starttls.enable">${email.smtp.starttls.enable}</prop>
		       	   </props>
			</property>
		</bean>
		<bean id="multipartResolver"
		    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		
		    <property name="maxUploadSize" value="20971520"/>
		</bean>
</beans>